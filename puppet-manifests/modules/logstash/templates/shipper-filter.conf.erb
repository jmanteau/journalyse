
filter {
  multiline {
    type => "syslog"
    pattern => "^\t"
    what => "previous"
  }


  grok {
    type => "apache"
    # See the following URL for a complete list of named patterns
    # logstash/grok ships with by default:
    # https://github.com/logstash/logstash/tree/master/patterns
    #
    # The grok filter will use the below pattern and on successful match use
    # any captured values as new fields in the event.
    pattern => "%{COMBINEDAPACHELOG}"
  }

  date {
    type => "apache"
    # Try to pull the timestamp from the 'timestamp' field (parsed above with
    # grok). The apache time format looks like: "18/Aug/2011:05:44:34 -0700"
    timestamp => "dd/MMM/yyyy:HH:mm:ss Z"
  }

  #
  # polaris apache error log
  # (nicked from https://gist.github.com/1346387)
  #
  # [Fri Nov 23 00:00:39 2012] [error] [client 64.69.12.83] Multiple Include attempts for DatabaseStringsCommon.php
  grok {
    type => "apache-error"
    pattern => "%{GENERICAPACHEERROR}"
    patterns_dir => "/etc/logstash/grok.d"
  }

  date {
    type => "apache-error"
    timestamp => "EEE MMM dd HH:mm:ss yyyy"
  }

  # HACK: only allow log replay on the loopback address,
  # so force the source_host to fqdn for this host
  mutate {
    type => "apache-error"
    replace => [ "@source_host", "<%=fqdn%>" ]
  }

}

